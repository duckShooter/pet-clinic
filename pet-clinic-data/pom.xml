<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>guru.framework</groupId>
    <artifactId>pet-clinic</artifactId>
    <version>0.0.2-SNAPSHOT</version>
  </parent>
  <artifactId>pet-clinic-data</artifactId>
  
  <dependencies>
  		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
  
 	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
						<configuration>
						 	<skip>true</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	
	<properties>
		<spring-boot.repackage.skip>true</spring-boot.repackage.skip>
		<!-- <start-class>guru.framework.PetClinicApplication</start-class> -->
	</properties>
	
	<!-- 
		* Multi-Module Maven Project has error 'can't find Main class'
			- Spring Boot is trying to build an executable fat JAR (uber JAR) with dependencies for 
			  a module that should be a normal JAR, thus looking for the main class for the JAR manifest file.
			- Solution: You need to tell the Spring Boot Maven Plugin to not repackage the jar.
			Add the following property to the Maven module you wish packaged as a normal jar.
    	<properties>
        	<spring-boot.repackage.skip>true</spring-boot.repackage.skip>
    	</properties>
		Note: For Spring Boot 2.1 or Higher! This configuration has changed from earlier versions of Spring Boot.
	 -->
	
</project>